name: Yarn

on: [push]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2-beta
        with:
          node-version: 14

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Caching
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install

      - name: Build
        env:
          NODE_ENV: production
        run: yarn run build

      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF##*/}

      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest

      - name: Docker build
        env:
          IMAGE_NAME: covid-journal-frontend
          VERSION: ${{ steps.get_version.outputs.VERSION }}
        run: |
          docker build \
            --tag $IMAGE_NAME:$VERSION \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --cache-from docker.pkg.github.com/covidjournal/frontend/$IMAGE_NAME \
            .

      - name: Docker publish
        env:
          IMAGE_NAME: covid-journal-frontend
          VERSION: ${{ steps.get_version.outputs.VERSION }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "$GITHUB_TOKEN" | docker login docker.pkg.github.com -u $GITHUB_ACTOR --password-stdin
          docker tag $IMAGE_NAME:$VERSION docker.pkg.github.com/covidjournal/frontend/$IMAGE_NAME:$VERSION
          docker push docker.pkg.github.com/covidjournal/frontend/$IMAGE_NAME:$VERSION
